// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id        String @id // gmail address
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  emails Email[]
  
  @@map("users")
}

model Email {
  id String @id @default(uuid())
  userId String 
  gmailId String @unique // gmail id
  subject String
  fromEmail String
  fromName String?
  content String   @db.Text
  cleanedBody String @db.Text
  rawBody String? @db.Text
  receivedAt DateTime
  processedAt DateTime @default(now())


  // metadata
  linkCount Int @default(0)
  wordCount Int @default(0)

  // Relations 

  user User @relation(fields: [userId], references: [id])
  headlines Headlines?
  searchResults SearchResults?
  scrapedResults ScrapedResults?
  summaries  Summaries?

  @@index([userId])
  @@map("emails")
}

model Headlines {
  id String @id @default(uuid())
  msgId String  @unique
  userId String

  // headlines as json array
  data Json 
  total Int @default(0)

  createdAt DateTime @default(now())

  // relations
  email Email @relation(fields: [msgId], references: [id])

@@index([msgId])
@@map("headlines")
}


model SearchResults {
  id String @id @default(uuid())
  msgId String @unique
  userId String

  // search results
 data Json   // map: headline -> search results
 total Int @default(0)
 successful Int @default(0)

 searchedAt DateTime @default(now())

 // relations
 email Email @relation(fields: [msgId], references: [id])

 @@index([msgId])
 @@map("search_results")
}

model ScrapedResults {
  id String @id @default(uuid())
  msgId String @unique
  userId String

  // scraped results as json

  data Json  // map: headline -> scraped articles
  total Int @default(0)
  successful Int @default(0)

  scrappedAt DateTime @default(now())

  // relations
  email Email @relation(fields: [msgId], references: [id])

  @@index([msgId])
  @@map("scraped_results")
}

model Summaries {
  id String @id @default(uuid())
  msgId String @unique
  userId String

  // summaries data as json
  data Json
  total Int @default(0)
  successful Int @default(0)

  modelUsed String  @default("gemini-2.0-flash-lite-001")
  generatedAt DateTime @default(now())

  // relations
  email Email @relation(fields: [msgId], references: [id])

  @@index([msgId])
  @@map("summaries")
}

